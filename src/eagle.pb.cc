// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eagle.proto

#include "eagle.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_eagle_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eagle_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ErrorResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eagle_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetFitness;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eagle_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetFitnessResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eagle_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetGraph;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eagle_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetGraphResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eagle_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SetGraph;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eagle_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SuccessResponse;
}  // namespace protobuf_eagle_2eproto
namespace eagle {
class GetFitnessDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFitness>
      _instance;
} _GetFitness_default_instance_;
class GetFitnessResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFitnessResponse>
      _instance;
} _GetFitnessResponse_default_instance_;
class GetGraphDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetGraph>
      _instance;
} _GetGraph_default_instance_;
class GetGraphResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetGraphResponse>
      _instance;
} _GetGraphResponse_default_instance_;
class SetGraphDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetGraph>
      _instance;
} _SetGraph_default_instance_;
class SuccessResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SuccessResponse>
      _instance;
} _SuccessResponse_default_instance_;
class ErrorResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorResponse>
      _instance;
} _ErrorResponse_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
  const ::eagle::GetFitness* get_fitness_;
  const ::eagle::GetGraph* get_graph_;
  const ::eagle::SetGraph* set_graph_;
} _Request_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
  const ::eagle::GetFitnessResponse* get_fitness_;
  const ::eagle::GetGraphResponse* get_graph_;
  const ::eagle::SuccessResponse* success_;
  const ::eagle::ErrorResponse* error_;
} _Response_default_instance_;
}  // namespace eagle
namespace protobuf_eagle_2eproto {
static void InitDefaultsGetFitness() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eagle::_GetFitness_default_instance_;
    new (ptr) ::eagle::GetFitness();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eagle::GetFitness::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetFitness =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetFitness}, {}};

static void InitDefaultsGetFitnessResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eagle::_GetFitnessResponse_default_instance_;
    new (ptr) ::eagle::GetFitnessResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eagle::GetFitnessResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetFitnessResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetFitnessResponse}, {}};

static void InitDefaultsGetGraph() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eagle::_GetGraph_default_instance_;
    new (ptr) ::eagle::GetGraph();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eagle::GetGraph::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetGraph =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetGraph}, {}};

static void InitDefaultsGetGraphResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eagle::_GetGraphResponse_default_instance_;
    new (ptr) ::eagle::GetGraphResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eagle::GetGraphResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetGraphResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetGraphResponse}, {}};

static void InitDefaultsSetGraph() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eagle::_SetGraph_default_instance_;
    new (ptr) ::eagle::SetGraph();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eagle::SetGraph::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetGraph =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetGraph}, {}};

static void InitDefaultsSuccessResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eagle::_SuccessResponse_default_instance_;
    new (ptr) ::eagle::SuccessResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eagle::SuccessResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SuccessResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSuccessResponse}, {}};

static void InitDefaultsErrorResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eagle::_ErrorResponse_default_instance_;
    new (ptr) ::eagle::ErrorResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eagle::ErrorResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ErrorResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsErrorResponse}, {}};

static void InitDefaultsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eagle::_Request_default_instance_;
    new (ptr) ::eagle::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eagle::Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRequest}, {
      &protobuf_eagle_2eproto::scc_info_GetFitness.base,
      &protobuf_eagle_2eproto::scc_info_GetGraph.base,
      &protobuf_eagle_2eproto::scc_info_SetGraph.base,}};

static void InitDefaultsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eagle::_Response_default_instance_;
    new (ptr) ::eagle::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eagle::Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsResponse}, {
      &protobuf_eagle_2eproto::scc_info_GetFitnessResponse.base,
      &protobuf_eagle_2eproto::scc_info_GetGraphResponse.base,
      &protobuf_eagle_2eproto::scc_info_SuccessResponse.base,
      &protobuf_eagle_2eproto::scc_info_ErrorResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetFitness.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetFitnessResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetGraph.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetGraphResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetGraph.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SuccessResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ErrorResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response.base);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::GetFitness, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::GetFitness, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::GetFitnessResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::GetFitnessResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::GetFitnessResponse, fitness_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::GetGraph, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::GetGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::GetGraphResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::GetGraphResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::GetGraphResponse, fitness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::GetGraphResponse, graph_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::SetGraph, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::SetGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::SetGraph, fitness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::SetGraph, graph_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::SuccessResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::SuccessResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::ErrorResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::ErrorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::ErrorResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::ErrorResponse, message_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::Request, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::eagle::RequestDefaultTypeInternal, get_fitness_),
  offsetof(::eagle::RequestDefaultTypeInternal, get_graph_),
  offsetof(::eagle::RequestDefaultTypeInternal, set_graph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::Request, request_),
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::Response, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::eagle::ResponseDefaultTypeInternal, get_fitness_),
  offsetof(::eagle::ResponseDefaultTypeInternal, get_graph_),
  offsetof(::eagle::ResponseDefaultTypeInternal, success_),
  offsetof(::eagle::ResponseDefaultTypeInternal, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eagle::Response, response_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(::eagle::GetFitness)},
  { 5, 11, sizeof(::eagle::GetFitnessResponse)},
  { 12, 17, sizeof(::eagle::GetGraph)},
  { 17, 24, sizeof(::eagle::GetGraphResponse)},
  { 26, 33, sizeof(::eagle::SetGraph)},
  { 35, 40, sizeof(::eagle::SuccessResponse)},
  { 40, 47, sizeof(::eagle::ErrorResponse)},
  { 49, 58, sizeof(::eagle::Request)},
  { 61, 71, sizeof(::eagle::Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::eagle::_GetFitness_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eagle::_GetFitnessResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eagle::_GetGraph_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eagle::_GetGraphResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eagle::_SetGraph_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eagle::_SuccessResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eagle::_ErrorResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eagle::_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eagle::_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "eagle.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013eagle.proto\022\005eagle\"\014\n\nGetFitness\"%\n\022Ge"
      "tFitnessResponse\022\017\n\007fitness\030\001 \002(\002\"\n\n\010Get"
      "Graph\"2\n\020GetGraphResponse\022\017\n\007fitness\030\001 \002"
      "(\002\022\r\n\005graph\030\002 \002(\014\"*\n\010SetGraph\022\017\n\007fitness"
      "\030\001 \002(\002\022\r\n\005graph\030\002 \002(\014\"\021\n\017SuccessResponse"
      "\"0\n\rErrorResponse\022\016\n\006status\030\001 \002(\r\022\017\n\007mes"
      "sage\030\002 \002(\t\"\212\001\n\007Request\022(\n\013get_fitness\030\n "
      "\001(\0132\021.eagle.GetFitnessH\000\022$\n\tget_graph\030\013 "
      "\001(\0132\017.eagle.GetGraphH\000\022$\n\tset_graph\030\014 \001("
      "\0132\017.eagle.SetGraphH\000B\t\n\007request\"\310\001\n\010Resp"
      "onse\0220\n\013get_fitness\030\n \001(\0132\031.eagle.GetFit"
      "nessResponseH\000\022,\n\tget_graph\030\013 \001(\0132\027.eagl"
      "e.GetGraphResponseH\000\022)\n\007success\030\014 \001(\0132\026."
      "eagle.SuccessResponseH\000\022%\n\005error\030\r \001(\0132\024"
      ".eagle.ErrorResponseH\000B\n\n\010response"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 594);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "eagle.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_eagle_2eproto
namespace eagle {

// ===================================================================

void GetFitness::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFitness::GetFitness()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eagle_2eproto::scc_info_GetFitness.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eagle.GetFitness)
}
GetFitness::GetFitness(const GetFitness& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:eagle.GetFitness)
}

void GetFitness::SharedCtor() {
}

GetFitness::~GetFitness() {
  // @@protoc_insertion_point(destructor:eagle.GetFitness)
  SharedDtor();
}

void GetFitness::SharedDtor() {
}

void GetFitness::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetFitness::descriptor() {
  ::protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFitness& GetFitness::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eagle_2eproto::scc_info_GetFitness.base);
  return *internal_default_instance();
}


void GetFitness::Clear() {
// @@protoc_insertion_point(message_clear_start:eagle.GetFitness)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetFitness::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eagle.GetFitness)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:eagle.GetFitness)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eagle.GetFitness)
  return false;
#undef DO_
}

void GetFitness::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eagle.GetFitness)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eagle.GetFitness)
}

::google::protobuf::uint8* GetFitness::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eagle.GetFitness)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eagle.GetFitness)
  return target;
}

size_t GetFitness::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eagle.GetFitness)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetFitness::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eagle.GetFitness)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFitness* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFitness>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eagle.GetFitness)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eagle.GetFitness)
    MergeFrom(*source);
  }
}

void GetFitness::MergeFrom(const GetFitness& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eagle.GetFitness)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetFitness::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eagle.GetFitness)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFitness::CopyFrom(const GetFitness& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eagle.GetFitness)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFitness::IsInitialized() const {
  return true;
}

void GetFitness::Swap(GetFitness* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFitness::InternalSwap(GetFitness* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetFitness::GetMetadata() const {
  protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFitnessResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFitnessResponse::kFitnessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFitnessResponse::GetFitnessResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eagle_2eproto::scc_info_GetFitnessResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eagle.GetFitnessResponse)
}
GetFitnessResponse::GetFitnessResponse(const GetFitnessResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fitness_ = from.fitness_;
  // @@protoc_insertion_point(copy_constructor:eagle.GetFitnessResponse)
}

void GetFitnessResponse::SharedCtor() {
  fitness_ = 0;
}

GetFitnessResponse::~GetFitnessResponse() {
  // @@protoc_insertion_point(destructor:eagle.GetFitnessResponse)
  SharedDtor();
}

void GetFitnessResponse::SharedDtor() {
}

void GetFitnessResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetFitnessResponse::descriptor() {
  ::protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFitnessResponse& GetFitnessResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eagle_2eproto::scc_info_GetFitnessResponse.base);
  return *internal_default_instance();
}


void GetFitnessResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:eagle.GetFitnessResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fitness_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetFitnessResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eagle.GetFitnessResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float fitness = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_fitness();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fitness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eagle.GetFitnessResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eagle.GetFitnessResponse)
  return false;
#undef DO_
}

void GetFitnessResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eagle.GetFitnessResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float fitness = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->fitness(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eagle.GetFitnessResponse)
}

::google::protobuf::uint8* GetFitnessResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eagle.GetFitnessResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float fitness = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->fitness(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eagle.GetFitnessResponse)
  return target;
}

size_t GetFitnessResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eagle.GetFitnessResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required float fitness = 1;
  if (has_fitness()) {
    total_size += 1 + 4;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetFitnessResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eagle.GetFitnessResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFitnessResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFitnessResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eagle.GetFitnessResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eagle.GetFitnessResponse)
    MergeFrom(*source);
  }
}

void GetFitnessResponse::MergeFrom(const GetFitnessResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eagle.GetFitnessResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fitness()) {
    set_fitness(from.fitness());
  }
}

void GetFitnessResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eagle.GetFitnessResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFitnessResponse::CopyFrom(const GetFitnessResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eagle.GetFitnessResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFitnessResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GetFitnessResponse::Swap(GetFitnessResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFitnessResponse::InternalSwap(GetFitnessResponse* other) {
  using std::swap;
  swap(fitness_, other->fitness_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetFitnessResponse::GetMetadata() const {
  protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetGraph::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGraph::GetGraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eagle_2eproto::scc_info_GetGraph.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eagle.GetGraph)
}
GetGraph::GetGraph(const GetGraph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:eagle.GetGraph)
}

void GetGraph::SharedCtor() {
}

GetGraph::~GetGraph() {
  // @@protoc_insertion_point(destructor:eagle.GetGraph)
  SharedDtor();
}

void GetGraph::SharedDtor() {
}

void GetGraph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetGraph::descriptor() {
  ::protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGraph& GetGraph::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eagle_2eproto::scc_info_GetGraph.base);
  return *internal_default_instance();
}


void GetGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:eagle.GetGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetGraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eagle.GetGraph)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:eagle.GetGraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eagle.GetGraph)
  return false;
#undef DO_
}

void GetGraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eagle.GetGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eagle.GetGraph)
}

::google::protobuf::uint8* GetGraph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eagle.GetGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eagle.GetGraph)
  return target;
}

size_t GetGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eagle.GetGraph)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGraph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eagle.GetGraph)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGraph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGraph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eagle.GetGraph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eagle.GetGraph)
    MergeFrom(*source);
  }
}

void GetGraph::MergeFrom(const GetGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eagle.GetGraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetGraph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eagle.GetGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGraph::CopyFrom(const GetGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eagle.GetGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGraph::IsInitialized() const {
  return true;
}

void GetGraph::Swap(GetGraph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGraph::InternalSwap(GetGraph* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetGraph::GetMetadata() const {
  protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetGraphResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGraphResponse::kFitnessFieldNumber;
const int GetGraphResponse::kGraphFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGraphResponse::GetGraphResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eagle_2eproto::scc_info_GetGraphResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eagle.GetGraphResponse)
}
GetGraphResponse::GetGraphResponse(const GetGraphResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  graph_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_graph()) {
    graph_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graph_);
  }
  fitness_ = from.fitness_;
  // @@protoc_insertion_point(copy_constructor:eagle.GetGraphResponse)
}

void GetGraphResponse::SharedCtor() {
  graph_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fitness_ = 0;
}

GetGraphResponse::~GetGraphResponse() {
  // @@protoc_insertion_point(destructor:eagle.GetGraphResponse)
  SharedDtor();
}

void GetGraphResponse::SharedDtor() {
  graph_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetGraphResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetGraphResponse::descriptor() {
  ::protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGraphResponse& GetGraphResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eagle_2eproto::scc_info_GetGraphResponse.base);
  return *internal_default_instance();
}


void GetGraphResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:eagle.GetGraphResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    graph_.ClearNonDefaultToEmptyNoArena();
  }
  fitness_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetGraphResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eagle.GetGraphResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float fitness = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_fitness();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fitness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes graph = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eagle.GetGraphResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eagle.GetGraphResponse)
  return false;
#undef DO_
}

void GetGraphResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eagle.GetGraphResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float fitness = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->fitness(), output);
  }

  // required bytes graph = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->graph(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eagle.GetGraphResponse)
}

::google::protobuf::uint8* GetGraphResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eagle.GetGraphResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float fitness = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->fitness(), target);
  }

  // required bytes graph = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->graph(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eagle.GetGraphResponse)
  return target;
}

size_t GetGraphResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:eagle.GetGraphResponse)
  size_t total_size = 0;

  if (has_graph()) {
    // required bytes graph = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->graph());
  }

  if (has_fitness()) {
    // required float fitness = 1;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t GetGraphResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eagle.GetGraphResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes graph = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->graph());

    // required float fitness = 1;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGraphResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eagle.GetGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGraphResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGraphResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eagle.GetGraphResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eagle.GetGraphResponse)
    MergeFrom(*source);
  }
}

void GetGraphResponse::MergeFrom(const GetGraphResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eagle.GetGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_graph();
      graph_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graph_);
    }
    if (cached_has_bits & 0x00000002u) {
      fitness_ = from.fitness_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetGraphResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eagle.GetGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGraphResponse::CopyFrom(const GetGraphResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eagle.GetGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGraphResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void GetGraphResponse::Swap(GetGraphResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGraphResponse::InternalSwap(GetGraphResponse* other) {
  using std::swap;
  graph_.Swap(&other->graph_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(fitness_, other->fitness_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetGraphResponse::GetMetadata() const {
  protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetGraph::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetGraph::kFitnessFieldNumber;
const int SetGraph::kGraphFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetGraph::SetGraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eagle_2eproto::scc_info_SetGraph.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eagle.SetGraph)
}
SetGraph::SetGraph(const SetGraph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  graph_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_graph()) {
    graph_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graph_);
  }
  fitness_ = from.fitness_;
  // @@protoc_insertion_point(copy_constructor:eagle.SetGraph)
}

void SetGraph::SharedCtor() {
  graph_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fitness_ = 0;
}

SetGraph::~SetGraph() {
  // @@protoc_insertion_point(destructor:eagle.SetGraph)
  SharedDtor();
}

void SetGraph::SharedDtor() {
  graph_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetGraph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetGraph::descriptor() {
  ::protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetGraph& SetGraph::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eagle_2eproto::scc_info_SetGraph.base);
  return *internal_default_instance();
}


void SetGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:eagle.SetGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    graph_.ClearNonDefaultToEmptyNoArena();
  }
  fitness_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetGraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eagle.SetGraph)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float fitness = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_fitness();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fitness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes graph = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eagle.SetGraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eagle.SetGraph)
  return false;
#undef DO_
}

void SetGraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eagle.SetGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float fitness = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->fitness(), output);
  }

  // required bytes graph = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->graph(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eagle.SetGraph)
}

::google::protobuf::uint8* SetGraph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eagle.SetGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float fitness = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->fitness(), target);
  }

  // required bytes graph = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->graph(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eagle.SetGraph)
  return target;
}

size_t SetGraph::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:eagle.SetGraph)
  size_t total_size = 0;

  if (has_graph()) {
    // required bytes graph = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->graph());
  }

  if (has_fitness()) {
    // required float fitness = 1;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t SetGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eagle.SetGraph)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes graph = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->graph());

    // required float fitness = 1;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetGraph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eagle.SetGraph)
  GOOGLE_DCHECK_NE(&from, this);
  const SetGraph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetGraph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eagle.SetGraph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eagle.SetGraph)
    MergeFrom(*source);
  }
}

void SetGraph::MergeFrom(const SetGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eagle.SetGraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_graph();
      graph_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graph_);
    }
    if (cached_has_bits & 0x00000002u) {
      fitness_ = from.fitness_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetGraph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eagle.SetGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetGraph::CopyFrom(const SetGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eagle.SetGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGraph::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void SetGraph::Swap(SetGraph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetGraph::InternalSwap(SetGraph* other) {
  using std::swap;
  graph_.Swap(&other->graph_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(fitness_, other->fitness_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetGraph::GetMetadata() const {
  protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SuccessResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SuccessResponse::SuccessResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eagle_2eproto::scc_info_SuccessResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eagle.SuccessResponse)
}
SuccessResponse::SuccessResponse(const SuccessResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:eagle.SuccessResponse)
}

void SuccessResponse::SharedCtor() {
}

SuccessResponse::~SuccessResponse() {
  // @@protoc_insertion_point(destructor:eagle.SuccessResponse)
  SharedDtor();
}

void SuccessResponse::SharedDtor() {
}

void SuccessResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SuccessResponse::descriptor() {
  ::protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SuccessResponse& SuccessResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eagle_2eproto::scc_info_SuccessResponse.base);
  return *internal_default_instance();
}


void SuccessResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:eagle.SuccessResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SuccessResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eagle.SuccessResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:eagle.SuccessResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eagle.SuccessResponse)
  return false;
#undef DO_
}

void SuccessResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eagle.SuccessResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eagle.SuccessResponse)
}

::google::protobuf::uint8* SuccessResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eagle.SuccessResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eagle.SuccessResponse)
  return target;
}

size_t SuccessResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eagle.SuccessResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SuccessResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eagle.SuccessResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SuccessResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SuccessResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eagle.SuccessResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eagle.SuccessResponse)
    MergeFrom(*source);
  }
}

void SuccessResponse::MergeFrom(const SuccessResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eagle.SuccessResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SuccessResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eagle.SuccessResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SuccessResponse::CopyFrom(const SuccessResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eagle.SuccessResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SuccessResponse::IsInitialized() const {
  return true;
}

void SuccessResponse::Swap(SuccessResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SuccessResponse::InternalSwap(SuccessResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SuccessResponse::GetMetadata() const {
  protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ErrorResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorResponse::kStatusFieldNumber;
const int ErrorResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorResponse::ErrorResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eagle_2eproto::scc_info_ErrorResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eagle.ErrorResponse)
}
ErrorResponse::ErrorResponse(const ErrorResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:eagle.ErrorResponse)
}

void ErrorResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0u;
}

ErrorResponse::~ErrorResponse() {
  // @@protoc_insertion_point(destructor:eagle.ErrorResponse)
  SharedDtor();
}

void ErrorResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ErrorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ErrorResponse::descriptor() {
  ::protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorResponse& ErrorResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eagle_2eproto::scc_info_ErrorResponse.base);
  return *internal_default_instance();
}


void ErrorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:eagle.ErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  status_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ErrorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eagle.ErrorResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "eagle.ErrorResponse.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eagle.ErrorResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eagle.ErrorResponse)
  return false;
#undef DO_
}

void ErrorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eagle.ErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 status = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->status(), output);
  }

  // required string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "eagle.ErrorResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eagle.ErrorResponse)
}

::google::protobuf::uint8* ErrorResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eagle.ErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 status = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->status(), target);
  }

  // required string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "eagle.ErrorResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eagle.ErrorResponse)
  return target;
}

size_t ErrorResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:eagle.ErrorResponse)
  size_t total_size = 0;

  if (has_message()) {
    // required string message = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  if (has_status()) {
    // required uint32 status = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  return total_size;
}
size_t ErrorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eagle.ErrorResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string message = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());

    // required uint32 status = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eagle.ErrorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eagle.ErrorResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eagle.ErrorResponse)
    MergeFrom(*source);
  }
}

void ErrorResponse::MergeFrom(const ErrorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eagle.ErrorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ErrorResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eagle.ErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorResponse::CopyFrom(const ErrorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eagle.ErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ErrorResponse::Swap(ErrorResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorResponse::InternalSwap(ErrorResponse* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ErrorResponse::GetMetadata() const {
  protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request::InitAsDefaultInstance() {
  ::eagle::_Request_default_instance_.get_fitness_ = const_cast< ::eagle::GetFitness*>(
      ::eagle::GetFitness::internal_default_instance());
  ::eagle::_Request_default_instance_.get_graph_ = const_cast< ::eagle::GetGraph*>(
      ::eagle::GetGraph::internal_default_instance());
  ::eagle::_Request_default_instance_.set_graph_ = const_cast< ::eagle::SetGraph*>(
      ::eagle::SetGraph::internal_default_instance());
}
void Request::set_allocated_get_fitness(::eagle::GetFitness* get_fitness) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (get_fitness) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      get_fitness = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, get_fitness, submessage_arena);
    }
    set_has_get_fitness();
    request_.get_fitness_ = get_fitness;
  }
  // @@protoc_insertion_point(field_set_allocated:eagle.Request.get_fitness)
}
void Request::set_allocated_get_graph(::eagle::GetGraph* get_graph) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (get_graph) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      get_graph = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, get_graph, submessage_arena);
    }
    set_has_get_graph();
    request_.get_graph_ = get_graph;
  }
  // @@protoc_insertion_point(field_set_allocated:eagle.Request.get_graph)
}
void Request::set_allocated_set_graph(::eagle::SetGraph* set_graph) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (set_graph) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      set_graph = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, set_graph, submessage_arena);
    }
    set_has_set_graph();
    request_.set_graph_ = set_graph;
  }
  // @@protoc_insertion_point(field_set_allocated:eagle.Request.set_graph)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kGetFitnessFieldNumber;
const int Request::kGetGraphFieldNumber;
const int Request::kSetGraphFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eagle_2eproto::scc_info_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eagle.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_request();
  switch (from.request_case()) {
    case kGetFitness: {
      mutable_get_fitness()->::eagle::GetFitness::MergeFrom(from.get_fitness());
      break;
    }
    case kGetGraph: {
      mutable_get_graph()->::eagle::GetGraph::MergeFrom(from.get_graph());
      break;
    }
    case kSetGraph: {
      mutable_set_graph()->::eagle::SetGraph::MergeFrom(from.set_graph());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:eagle.Request)
}

void Request::SharedCtor() {
  clear_has_request();
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:eagle.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (has_request()) {
    clear_request();
  }
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eagle_2eproto::scc_info_Request.base);
  return *internal_default_instance();
}


void Request::clear_request() {
// @@protoc_insertion_point(one_of_clear_start:eagle.Request)
  switch (request_case()) {
    case kGetFitness: {
      delete request_.get_fitness_;
      break;
    }
    case kGetGraph: {
      delete request_.get_graph_;
      break;
    }
    case kSetGraph: {
      delete request_.set_graph_;
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQUEST_NOT_SET;
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:eagle.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eagle.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .eagle.GetFitness get_fitness = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_get_fitness()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .eagle.GetGraph get_graph = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_get_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .eagle.SetGraph set_graph = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eagle.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eagle.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eagle.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (request_case()) {
    case kGetFitness:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        10, this->_internal_get_fitness(), output);
      break;
    case kGetGraph:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        11, this->_internal_get_graph(), output);
      break;
    case kSetGraph:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        12, this->_internal_set_graph(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eagle.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eagle.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (request_case()) {
    case kGetFitness:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          10, this->_internal_get_fitness(), deterministic, target);
      break;
    case kGetGraph:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          11, this->_internal_get_graph(), deterministic, target);
      break;
    case kSetGraph:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          12, this->_internal_set_graph(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eagle.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eagle.Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (request_case()) {
    // optional .eagle.GetFitness get_fitness = 10;
    case kGetFitness: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.get_fitness_);
      break;
    }
    // optional .eagle.GetGraph get_graph = 11;
    case kGetGraph: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.get_graph_);
      break;
    }
    // optional .eagle.SetGraph set_graph = 12;
    case kSetGraph: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.set_graph_);
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eagle.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eagle.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eagle.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eagle.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.request_case()) {
    case kGetFitness: {
      mutable_get_fitness()->::eagle::GetFitness::MergeFrom(from.get_fitness());
      break;
    }
    case kGetGraph: {
      mutable_get_graph()->::eagle::GetGraph::MergeFrom(from.get_graph());
      break;
    }
    case kSetGraph: {
      mutable_set_graph()->::eagle::SetGraph::MergeFrom(from.set_graph());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eagle.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eagle.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  switch (request_case()) {
    case kGetFitness: {
      break;
    }
    case kGetGraph: {
      break;
    }
    case kSetGraph: {
      if (has_set_graph()) {
        if (!this->set_graph().IsInitialized()) return false;
      }
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  swap(request_, other->request_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
  ::eagle::_Response_default_instance_.get_fitness_ = const_cast< ::eagle::GetFitnessResponse*>(
      ::eagle::GetFitnessResponse::internal_default_instance());
  ::eagle::_Response_default_instance_.get_graph_ = const_cast< ::eagle::GetGraphResponse*>(
      ::eagle::GetGraphResponse::internal_default_instance());
  ::eagle::_Response_default_instance_.success_ = const_cast< ::eagle::SuccessResponse*>(
      ::eagle::SuccessResponse::internal_default_instance());
  ::eagle::_Response_default_instance_.error_ = const_cast< ::eagle::ErrorResponse*>(
      ::eagle::ErrorResponse::internal_default_instance());
}
void Response::set_allocated_get_fitness(::eagle::GetFitnessResponse* get_fitness) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (get_fitness) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      get_fitness = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, get_fitness, submessage_arena);
    }
    set_has_get_fitness();
    response_.get_fitness_ = get_fitness;
  }
  // @@protoc_insertion_point(field_set_allocated:eagle.Response.get_fitness)
}
void Response::set_allocated_get_graph(::eagle::GetGraphResponse* get_graph) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (get_graph) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      get_graph = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, get_graph, submessage_arena);
    }
    set_has_get_graph();
    response_.get_graph_ = get_graph;
  }
  // @@protoc_insertion_point(field_set_allocated:eagle.Response.get_graph)
}
void Response::set_allocated_success(::eagle::SuccessResponse* success) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (success) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      success = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, success, submessage_arena);
    }
    set_has_success();
    response_.success_ = success;
  }
  // @@protoc_insertion_point(field_set_allocated:eagle.Response.success)
}
void Response::set_allocated_error(::eagle::ErrorResponse* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    response_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:eagle.Response.error)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kGetFitnessFieldNumber;
const int Response::kGetGraphFieldNumber;
const int Response::kSuccessFieldNumber;
const int Response::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eagle_2eproto::scc_info_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eagle.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_response();
  switch (from.response_case()) {
    case kGetFitness: {
      mutable_get_fitness()->::eagle::GetFitnessResponse::MergeFrom(from.get_fitness());
      break;
    }
    case kGetGraph: {
      mutable_get_graph()->::eagle::GetGraphResponse::MergeFrom(from.get_graph());
      break;
    }
    case kSuccess: {
      mutable_success()->::eagle::SuccessResponse::MergeFrom(from.success());
      break;
    }
    case kError: {
      mutable_error()->::eagle::ErrorResponse::MergeFrom(from.error());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:eagle.Response)
}

void Response::SharedCtor() {
  clear_has_response();
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:eagle.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  if (has_response()) {
    clear_response();
  }
}

void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eagle_2eproto::scc_info_Response.base);
  return *internal_default_instance();
}


void Response::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:eagle.Response)
  switch (response_case()) {
    case kGetFitness: {
      delete response_.get_fitness_;
      break;
    }
    case kGetGraph: {
      delete response_.get_graph_;
      break;
    }
    case kSuccess: {
      delete response_.success_;
      break;
    }
    case kError: {
      delete response_.error_;
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_NOT_SET;
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:eagle.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_response();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eagle.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .eagle.GetFitnessResponse get_fitness = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_get_fitness()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .eagle.GetGraphResponse get_graph = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_get_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .eagle.SuccessResponse success = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_success()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .eagle.ErrorResponse error = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eagle.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eagle.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eagle.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (response_case()) {
    case kGetFitness:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        10, this->_internal_get_fitness(), output);
      break;
    case kGetGraph:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        11, this->_internal_get_graph(), output);
      break;
    case kSuccess:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        12, this->_internal_success(), output);
      break;
    case kError:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        13, this->_internal_error(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eagle.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eagle.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (response_case()) {
    case kGetFitness:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          10, this->_internal_get_fitness(), deterministic, target);
      break;
    case kGetGraph:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          11, this->_internal_get_graph(), deterministic, target);
      break;
    case kSuccess:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          12, this->_internal_success(), deterministic, target);
      break;
    case kError:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          13, this->_internal_error(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eagle.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eagle.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (response_case()) {
    // optional .eagle.GetFitnessResponse get_fitness = 10;
    case kGetFitness: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.get_fitness_);
      break;
    }
    // optional .eagle.GetGraphResponse get_graph = 11;
    case kGetGraph: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.get_graph_);
      break;
    }
    // optional .eagle.SuccessResponse success = 12;
    case kSuccess: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.success_);
      break;
    }
    // optional .eagle.ErrorResponse error = 13;
    case kError: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.error_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eagle.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eagle.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eagle.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eagle.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.response_case()) {
    case kGetFitness: {
      mutable_get_fitness()->::eagle::GetFitnessResponse::MergeFrom(from.get_fitness());
      break;
    }
    case kGetGraph: {
      mutable_get_graph()->::eagle::GetGraphResponse::MergeFrom(from.get_graph());
      break;
    }
    case kSuccess: {
      mutable_success()->::eagle::SuccessResponse::MergeFrom(from.success());
      break;
    }
    case kError: {
      mutable_error()->::eagle::ErrorResponse::MergeFrom(from.error());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eagle.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eagle.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  switch (response_case()) {
    case kGetFitness: {
      if (has_get_fitness()) {
        if (!this->get_fitness().IsInitialized()) return false;
      }
      break;
    }
    case kGetGraph: {
      if (has_get_graph()) {
        if (!this->get_graph().IsInitialized()) return false;
      }
      break;
    }
    case kSuccess: {
      break;
    }
    case kError: {
      if (has_error()) {
        if (!this->error().IsInitialized()) return false;
      }
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  swap(response_, other->response_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_eagle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eagle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace eagle
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eagle::GetFitness* Arena::CreateMaybeMessage< ::eagle::GetFitness >(Arena* arena) {
  return Arena::CreateInternal< ::eagle::GetFitness >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eagle::GetFitnessResponse* Arena::CreateMaybeMessage< ::eagle::GetFitnessResponse >(Arena* arena) {
  return Arena::CreateInternal< ::eagle::GetFitnessResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eagle::GetGraph* Arena::CreateMaybeMessage< ::eagle::GetGraph >(Arena* arena) {
  return Arena::CreateInternal< ::eagle::GetGraph >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eagle::GetGraphResponse* Arena::CreateMaybeMessage< ::eagle::GetGraphResponse >(Arena* arena) {
  return Arena::CreateInternal< ::eagle::GetGraphResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eagle::SetGraph* Arena::CreateMaybeMessage< ::eagle::SetGraph >(Arena* arena) {
  return Arena::CreateInternal< ::eagle::SetGraph >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eagle::SuccessResponse* Arena::CreateMaybeMessage< ::eagle::SuccessResponse >(Arena* arena) {
  return Arena::CreateInternal< ::eagle::SuccessResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eagle::ErrorResponse* Arena::CreateMaybeMessage< ::eagle::ErrorResponse >(Arena* arena) {
  return Arena::CreateInternal< ::eagle::ErrorResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eagle::Request* Arena::CreateMaybeMessage< ::eagle::Request >(Arena* arena) {
  return Arena::CreateInternal< ::eagle::Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eagle::Response* Arena::CreateMaybeMessage< ::eagle::Response >(Arena* arena) {
  return Arena::CreateInternal< ::eagle::Response >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
